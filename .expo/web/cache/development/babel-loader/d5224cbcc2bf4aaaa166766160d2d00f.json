{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ResultImc from \"./ResultImc\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    weight = _useState4[0],\n    setWeight = _useState4[1];\n  var _useState5 = useState(\"preencha o peso e altura\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messageIMC = _useState6[0],\n    setMessageImc = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    imc = _useState8[0],\n    setImc = _useState8[1];\n  var _useState9 = useState(\"Calcular\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    textButton = _useState10[0],\n    setTextButton = _useState10[1];\n  function imcCalculator() {\n    return setImc((weight / (height * height)).toFixed(2));\n  }\n  function validationImc() {\n    if (weight != null && height != null) {\n      imcCalculator();\n      setHeight(null);\n      setWeight(null);\n      setMessageImc(\"Seu imc é igual:\");\n      setTextButton(\"Calcular novamente\");\n      return;\n    }\n    setImc(null);\n    setTextButton(\"Calcular\");\n    setMessageImc(\"preencha o peso e altura\");\n  }\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Altura\"\n      }), _jsx(TextInput, {\n        onChangeText: setHeight,\n        value: height,\n        placeholder: \"Ex. 1.70\",\n        KeyboardType: \"numeric\"\n      }), _jsx(Text, {\n        children: \"Peso\"\n      }), _jsx(TextInput, {\n        onChangeText: setWeight,\n        value: weight,\n        placeholder: \"Ex. 60.30\",\n        KeyboardType: \"numeric\"\n      }), _jsx(Button, {\n        title: \"Calcular IMC\",\n        onPress: function onPress() {\n          return validationImc();\n        }\n      })]\n    }), _jsx(ResultImc, {\n      messageResultImc: messageIMC,\n      resultImc: imc\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","ResultImc","Form","height","setHeight","weight","setWeight","messageIMC","setMessageImc","imc","setImc","textButton","setTextButton","imcCalculator","toFixed","validationImc"],"sources":["C:/Users/PC/Documents/1- Desenvolvimento de sistemas/GIT/One Bit code React/Aula 02 react - OneBit Health/React---OneBitHealth/src/components/Form/index.js"],"sourcesContent":["import React , {useState} from \"react\"\r\nimport { View, Text } from \"react-native\"\r\nimport { Button, TextInput } from \"react-native-web\";\r\nimport ResultImc from \"./ResultImc\";\r\n\r\n\r\nexport default function Form() {\r\n\r\n    const [height, setHeight]= useState(null)\r\n    const [weight, setWeight]= useState(null)\r\n    const [messageIMC, setMessageImc]= useState(\"preencha o peso e altura\")\r\n    const [imc , setImc]= useState(null)\r\n    const [textButton , setTextButton]= useState(\"Calcular\")\r\n\r\n    function imcCalculator(){\r\n        return setImc((weight /(height*height)).toFixed(2))\r\n    }\r\n\r\n    function validationImc(){\r\n        if (weight != null && height != null){\r\n            imcCalculator()\r\n            setHeight(null)\r\n            setWeight(null)\r\n            setMessageImc(\"Seu imc é igual:\")\r\n            setTextButton(\"Calcular novamente\")\r\n            return\r\n        }\r\n        setImc(null)\r\n        setTextButton(\"Calcular\")\r\n        setMessageImc(\"preencha o peso e altura\")\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <View>\r\n                <Text>Altura</Text>\r\n                <TextInput\r\n                    onChangeText={setHeight}\r\n                    value={height}\r\n                    placeholder=\"Ex. 1.70\"\r\n                    KeyboardType=\"numeric\"\r\n                />\r\n\r\n                <Text>Peso</Text>\r\n                <TextInput\r\n                    onChangeText={setWeight}\r\n                    value={weight}\r\n                    placeholder=\"Ex. 60.30\"\r\n                    KeyboardType=\"numeric\"\r\n                />\r\n\r\n                <Button \r\n                    title=\"Calcular IMC\" \r\n                    onPress={() => validationImc()}\r\n                    />\r\n            </View>\r\n\r\n            <ResultImc messageResultImc={messageIMC} resultImc={imc} />\r\n\r\n        </View>\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAAA;AAAA;AAGtC,OAAOC,SAAS;AAAoB;AAAA;AAGpC,eAAe,SAASC,IAAI,GAAG;EAE3B,gBAA2BF,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAlCG,MAAM;IAAEC,SAAS;EACxB,iBAA2BJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAlCK,MAAM;IAAEC,SAAS;EACxB,iBAAmCN,QAAQ,CAAC,0BAA0B,CAAC;IAAA;IAAhEO,UAAU;IAAEC,aAAa;EAChC,iBAAsBR,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7BS,GAAG;IAAGC,MAAM;EACnB,iBAAoCV,QAAQ,CAAC,UAAU,CAAC;IAAA;IAAjDW,UAAU;IAAGC,aAAa;EAEjC,SAASC,aAAa,GAAE;IACpB,OAAOH,MAAM,CAAC,CAACL,MAAM,IAAGF,MAAM,GAACA,MAAM,CAAC,EAAEW,OAAO,CAAC,CAAC,CAAC,CAAC;EACvD;EAEA,SAASC,aAAa,GAAE;IACpB,IAAIV,MAAM,IAAI,IAAI,IAAIF,MAAM,IAAI,IAAI,EAAC;MACjCU,aAAa,EAAE;MACfT,SAAS,CAAC,IAAI,CAAC;MACfE,SAAS,CAAC,IAAI,CAAC;MACfE,aAAa,CAAC,kBAAkB,CAAC;MACjCI,aAAa,CAAC,oBAAoB,CAAC;MACnC;IACJ;IACAF,MAAM,CAAC,IAAI,CAAC;IACZE,aAAa,CAAC,UAAU,CAAC;IACzBJ,aAAa,CAAC,0BAA0B,CAAC;EAC7C;EAEA,OACI,MAAC,IAAI;IAAA,WACD,MAAC,IAAI;MAAA,WACD,KAAC,IAAI;QAAA;MAAA,EAAc,EACnB,KAAC,SAAS;QACN,YAAY,EAAEJ,SAAU;QACxB,KAAK,EAAED,MAAO;QACd,WAAW,EAAC,UAAU;QACtB,YAAY,EAAC;MAAS,EACxB,EAEF,KAAC,IAAI;QAAA;MAAA,EAAY,EACjB,KAAC,SAAS;QACN,YAAY,EAAEG,SAAU;QACxB,KAAK,EAAED,MAAO;QACd,WAAW,EAAC,WAAW;QACvB,YAAY,EAAC;MAAS,EACxB,EAEF,KAAC,MAAM;QACH,KAAK,EAAC,cAAc;QACpB,OAAO,EAAE;UAAA,OAAMU,aAAa,EAAE;QAAA;MAAC,EAC7B;IAAA,EACH,EAEP,KAAC,SAAS;MAAC,gBAAgB,EAAER,UAAW;MAAC,SAAS,EAAEE;IAAI,EAAG;EAAA,EAExD;AAEf"},"metadata":{},"sourceType":"module"}